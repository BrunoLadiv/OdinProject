(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))o(r);new MutationObserver(r=>{for(const d of r)if(d.type==="childList")for(const i of d.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&o(i)}).observe(document,{childList:!0,subtree:!0});function e(r){const d={};return r.integrity&&(d.integrity=r.integrity),r.referrerPolicy&&(d.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?d.credentials="include":r.crossOrigin==="anonymous"?d.credentials="omit":d.credentials="same-origin",d}function o(r){if(r.ep)return;r.ep=!0;const d=e(r);fetch(r.href,d)}})();function g(n){const t=new Date(n),e=t.getDate().toString().padStart(2,"0"),o=(t.getMonth()+1).toString().padStart(2,"0"),r=t.getFullYear(),d=t.getHours().toString().padStart(2,"0"),i=t.getMinutes().toString().padStart(2,"0");return`${e}/${o}/${r}  ${d}:${i}`}function w(n){switch(n){case"high":return"high-priority";case"medium":return"medium-priority";case"low":return"low-priority";default:return""}}function v(){return Math.random().toString(36).substr(2,9)}const k=document.querySelector(".close-info-modal-btn"),j=document.querySelector(".info-modal");k.addEventListener("click",()=>{j.close()});class P{constructor(){this.uncompletedTab=document.getElementById("radio-2"),this.allTab=document.getElementById("radio-1"),this.completedTab=document.getElementById("radio-3"),this.todos=JSON.parse(localStorage.getItem("todolistdata"))||[],this.selectedFilter="all",this.selectedProject="Default",this.handleTab()}addTodo(t){this.todos.push(t),localStorage.setItem("todolistdata",JSON.stringify(this.todos)),this.render()}removeTodoById(t){const e=this.todos.findIndex(o=>o.id===t);e!==-1&&(this.todos.splice(e,1),localStorage.setItem("todolistdata",JSON.stringify(this.todos)),this.render())}toggleTodoCompleteById(t){const e=this.todos.findIndex(o=>o.id===t);e!==-1&&(this.todos[e].completed=!this.todos[e].completed,localStorage.setItem("todolistdata",JSON.stringify(this.todos)),this.render())}filterTasks(){const t=document.querySelector(".page-title");let e=[];switch(this.selectedFilter){case"completed":t.innerText="Completed Tasks",e=this.todos.filter(o=>o.completed);break;case"uncompleted":t.innerText="Uncompleted Tasks",e=this.todos.filter(o=>!o.completed);break;case"all":t.innerText="All Tasks",e=this.todos;break;default:e=this.todos}return console.log(e),e=e.filter(o=>o.project===this.selectedProject),e}setFilter(t){this.selectedFilter=t,this.render()}handleTab(){this.uncompletedTab.addEventListener("change",()=>{this.uncompletedTab.checked&&this.setFilter("uncompleted")}),this.allTab.addEventListener("change",()=>{this.allTab.checked&&this.setFilter("all")}),this.completedTab.addEventListener("change",()=>{this.completedTab.checked&&this.setFilter("completed")})}findTodoById(t){return this.todos.find(e=>e.id===t)}editTodo(t){const e=document.getElementById("project-select").value,o=c.querySelector('input[name="title"]').value,r=c.querySelector('input[name="date"]').value,d=c.querySelector("textarea").value,i=c.querySelector("#taskPriority").value;return{title:o,date:r,description:d,priority:i,completed:!1,project:e,id:t}}editTodoById(t,e){const o=this.todos.findIndex(r=>r.id===t);o!==-1&&(this.todos[o]=e,localStorage.setItem("todolistdata",JSON.stringify(this.todos)),this.render())}render(){const t=document.querySelector(".to-do-ul");t.innerHTML="",this.filterTasks().forEach(e=>{const o=document.createElement("li");o.setAttribute("id",e.id),o.setAttribute("class","todo-item"),o.innerHTML=`
        <p>
          <input
            class="todo-done"
            title="Mark as done"
            type="checkbox"
            ${e.completed?"checked":""}
          />
          ${e.title}
        </p>
        <p class="due-date">Due date: ${g(e.date)} </p>
        <div class="todo-buttons">
          <i title="Show to-do info" class="fa-solid fa-circle-info info-btn"></i>
          <i
            title="Edit To-do"
            class="fa-regular fa-pen-to-square edit-todo"
          ></i>
          <i
            title="Delete To-do"
            class="fa-regular fa-trash-can delete-todo"
            data-todo-id="${e.id}"
          ></i>
          <i class="fa-solid fa-flag ${w(e.priority)}" title="${e.priority} priority!"></i>
        </div>
      `,t.appendChild(o)}),this.setupEventListeners()}setupEventListeners(){const t=document.querySelector(".projects-form");document.querySelector(".close-new-project-modal").addEventListener("click",()=>{t.close()}),document.querySelector(".close-new-todo-modal").addEventListener("click",()=>{p.close()}),document.querySelectorAll(".edit-todo").forEach(l=>{l.addEventListener("click",h=>{const m=l.closest(".todo-item").getAttribute("id"),u=this.findTodoById(m);p.showModal(),I(),document.getElementById("project-select").value=u.project,c.querySelector('input[name="title"]').value=u.title,c.querySelector('input[name="date"]').value=u.date,c.querySelector("textarea").value=u.description,c.querySelector("#taskPriority").value=u.priority,c.querySelector(".create-todo-modal-btn").style.display="none",document.querySelector(".new-todo-header > h2").innerText="Edit todo";const s=document.createElement("button");s.setAttribute("class","update-btn"),s.setAttribute("type","button"),s.innerText="Update",c.appendChild(s),p.addEventListener("close",()=>{c.querySelector(".create-todo-modal-btn").style.display="block",s.style.display="none",document.querySelector(".new-todo-header > h2").innerText="New todo",c.reset()}),s.addEventListener("click",()=>{const y=this.editTodo(u.id);this.editTodoById(u.id,y),p.close(),c.querySelector(".create-todo-modal-btn").style.display="block",s.style.display="none",document.querySelector(".new-todo-header > h2").innerText="New todo",c.reset()})})});const d=document.querySelectorAll(".info-btn");console.log(d),d.forEach(l=>{l.addEventListener("click",h=>{const m=h.currentTarget.closest(".todo-item");if(m){const u=m.id,s=this.todos.find(y=>y.id===u);console.log(s),document.querySelector("#title-info").value=s.title,document.querySelector("#due-date-info").value=g(s.date),document.querySelector("#description-info").value=s.description,document.querySelector("#priority-info").value=s.priority}j.showModal()})}),document.querySelectorAll(".delete-todo").forEach(l=>{l.addEventListener("click",()=>{if(!confirm("Are you sure you want to delete? It can't be undone!"))return;const h=l.getAttribute("data-todo-id");this.removeTodoById(h)})}),document.querySelectorAll(".todo-done").forEach(l=>{l.addEventListener("change",h=>{const m=l.closest(".todo-item").getAttribute("id");console.log(m),this.toggleTodoCompleteById(m)})})}}const a=JSON.parse(localStorage.getItem("projects"))||[];let T="default";class q{constructor(t){this.name=t,this.todos=[],this.id=v()}addTodo(t){this.todos.push(t)}}function b(n){const t=new q(n);a.forEach(e=>e.active=!1),t.active=!0,a.push(t),localStorage.setItem("projects",JSON.stringify(a)),f.selectedProject=n,f.render(),S()}function B(n,t){const e=a.find(o=>o.id===n);if(e instanceof q)try{e.addTodo(t)}catch(o){console.log(o)}}function S(){const n=document.querySelector(".project-item");a.length===0&&b("Default"),n.innerHTML="",a.forEach(t=>{const e=document.createElement("li");e.setAttribute("class","project-item-li"),e.innerHTML=`${t.name} <span id=${t.id} class="delete-project-btn">Ã—</span> `,n.appendChild(e);const o=e.querySelector(".delete-project-btn");o.addEventListener("click",r=>{const d=o.id;x(d,t.name)}),e.addEventListener("click",()=>{document.querySelectorAll(".project-item-li").forEach(d=>{d.classList.remove("active")}),e.classList.add("active"),T=t.name,f.selectedProject=T,f.render()}),t.active&&e.classList.add("active")})}function x(n,t){if(!confirm(`Are you sure you want to delete project ${t}?`))return;const e=a.findIndex(o=>o.id===n);e!==-1&&(a.splice(e,1),localStorage.setItem("projects",JSON.stringify(a)),S())}const M=document.querySelector(".new-project-btn"),E=document.querySelector(".projects-form"),A=document.querySelector(".add-project");M.addEventListener("click",()=>{const n=document.querySelector(".project-name-input").value;b(n),E.close()});A.addEventListener("click",()=>{E.showModal()});const f=new P,O=document.querySelector(".plus-todo"),p=document.querySelector(".new-todo-modal");O.addEventListener("click",()=>{p.showModal(),I()});const c=document.querySelector(".new-todo-form");c.addEventListener("submit",n=>{n.preventDefault();const t=document.getElementById("project-select").value,e=c.querySelector('input[name="title"]').value,o=c.querySelector('input[name="date"]').value,r=c.querySelector("textarea").value,d=c.querySelector("#taskPriority").value,i={title:e,date:o,description:r,priority:d,completed:!1,project:t,id:v()};f.addTodo(i),B(i.project,i),p.close()});f.render();S();function I(){const n=document.getElementById("project-select");n.innerHTML="",a.forEach(t=>{const e=document.createElement("option");e.innerText=t.name,n.appendChild(e)})}
